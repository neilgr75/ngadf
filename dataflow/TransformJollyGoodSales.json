{
	"name": "TransformJollyGoodSales",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "JollyGoodSalesSource",
						"type": "DatasetReference"
					},
					"name": "JollyGoodSales"
				},
				{
					"linkedService": {
						"referenceName": "adfbyexamplesa",
						"type": "LinkedServiceReference"
					},
					"name": "ExchangeRates"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "TransformJollyGoodSalesFilter"
				},
				{
					"name": "RatesToUSD"
				},
				{
					"name": "LookupExchangeRate"
				},
				{
					"name": "DerivedSalesValueUSD"
				},
				{
					"name": "PrepareOutputSchema"
				}
			],
			"script": "parameters{\n\tRunSeqNo as integer (-1)\n}\nsource(output(\n\t\tPeriod as date,\n\t\tProduct as string,\n\t\t{Unit Price} as double,\n\t\tCurrency as string,\n\t\t{Units Sold} as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> JollyGoodSales\nsource(output(\n\t\tFromCurrency as string,\n\t\tToCurrency as string,\n\t\tDate as date,\n\t\tExchangeRate as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'excel',\n\tcontainer: 'sampledata',\n\tfolderPath: 'azure-data-factory-by-example-main/SampleData',\n\tfileName: 'ExchangeRates.xlsx',\n\tsheetName: 'Sheet1',\n\tfirstRowAsHeader: true) ~> ExchangeRates\nJollyGoodSales filter(Product != 'Month Total') ~> TransformJollyGoodSalesFilter\nExchangeRates filter(ToCurrency=='USD') ~> RatesToUSD\nTransformJollyGoodSalesFilter, RatesToUSD lookup(Currency == FromCurrency\n\t&& Period == Date,\n\tmultiple: true,\n\tbroadcast: 'auto')~> LookupExchangeRate\nLookupExchangeRate derive(SalesValueUSD = {Unit Price}*{Units Sold}*ExchangeRate,\n\t\tRetailer = 'Jolly Good Ltd',\n\t\tRunSeqNo = $RunSeqNo) ~> DerivedSalesValueUSD\nDerivedSalesValueUSD select(mapColumn(\n\t\tSalesMonth = Period,\n\t\tProduct,\n\t\tUnitsSold = {Units Sold},\n\t\tSalesValueUSD,\n\t\tRetailer,\n\t\tRunSeqNo\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PrepareOutputSchema"
		}
	}
}